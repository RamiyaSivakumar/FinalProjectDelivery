
```{r}
library(Glimma)
library(edgeR)
library(limma)
library(Homo.sapiens)
library(reticulate)
```

```{r}
setwd("/Users/ramiyasivakumar/")
getwd()
```
```{r}
files <- c("M1.tsv","M2.tsv","M3.tsv","M4.tsv","M5.tsv","M6.tsv","M7.tsv","M8.tsv","M9.tsv","M10.tsv","M11.tsv","M12.tsv","M13.tsv","M14.tsv","M15.tsv","M16.tsv","M17.tsv","M18.tsv","M19.tsv","M20.tsv","F1.tsv","F2.tsv","F3.tsv","F4.tsv","F5.tsv","F6.tsv","F7.tsv","F8.tsv","F9.tsv","F10.tsv","F11.tsv","F12.tsv","F13.tsv","F14.tsv","F15.tsv","F16.tsv","F17.tsv","F18.tsv","F19.tsv","F20.tsv")

read.delim(files[1],nrow=5,header=FALSE)
```
```{r}
x <- readDGE(files, columns=c(1,2))
class(x)
```
```{r}
dim(x)
```
```{r}
samplenames<-colnames(x)
sampleNames
colnames(x) <- samplenames
```
```{r}
group <- c(rep("Male",20),rep("Female",20))
x$samples$group <- group
x$samples
```
```{r}
library(gsubfn)
geneid <- rownames(x)
geneid <-gsub("\\.[0-9]*$","", geneid)
head(geneid)

```
```{r}
genes <- select(Homo.sapiens, keys=geneid, columns=c("SYMBOL", "TXCHROM"), 
                keytype="ENSEMBL")
head(genes)
```
```{r}
genes <- genes[!duplicated(genes$ENSEMBL),]
x$genes <- genes
x
```
```{r}
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
```
```{r}
L <- mean(x$samples$lib.size) * 1e-6
M <- median(x$samples$lib.size) * 1e-6
c(L, M)
```
```{r}
summary(lcpm)
```
```{r}
table(rowSums(x$counts==0)==9)
```
```{r}
keep.exprs <- filterByExpr(x, group=group)
x <- x[keep.exprs,, keep.lib.sizes=FALSE]
dim(x)
```
```{r}
lcpm.cutoff <- log2(10/M + 2/L)
library(RColorBrewer)
nsamples <- ncol(x)
col <- brewer.pal(nsamples, "Paired")
par(mfrow=c(1,2))
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="A. Raw data", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", samplenames, text.col=col, bty="n")
lcpm <- cpm(x, log=TRUE)
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.26), las=2, main="", xlab="")
title(main="B. Filtered data", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
legend("topright", samplenames, text.col=col, bty="n")
```
```{r}
x <- calcNormFactors(x, method = "TMM")
x$samples$norm.factors
```
```{r}
x2 <- x
x2$samples$norm.factors <- 1
x2$counts[,1] <- ceiling(x2$counts[,1]*0.05)
x2$counts[,2] <- x2$counts[,2]*5
```
```{r}
par(mfrow=c(1,2))
lcpm <- cpm(x2, log=TRUE)
boxplot(lcpm, las=2, col=col, main="")
title(main="A. Example: Unnormalised data",ylab="Log-cpm")
x2 <- calcNormFactors(x2)  
x2$samples$norm.factors
```
```{r}
lcpm <- cpm(x2, log=TRUE)
boxplot(lcpm, las=2, col=col, main="")
title(main="B. Example: Normalised data",ylab="Log-cpm")
```
```{r}
library(limma)
library(Glimma)
lcpm <- cpm(x, log=TRUE)
par(mfrow=c(1,2))
group
levels(group) <-  brewer.pal(nlevels(group), "Set1")
col.group <- as.character(group)
col.group <- c("purple","orange")[group]
plotMDS(lcpm, labels=group, col=col.group)
title(main="A. Sample groups")
```
```{r}
glMDSPlot(lcpm,groups = group)
```
```{r}
design <- model.matrix(~0+group)
colnames(design) <- gsub("group", "", colnames(design))
design
```
```{r}
contr.matrix <- makeContrasts(
   MaleVsFemale = Male-Female, 
   levels = colnames(design))
contr.matrix
```
```{r}
par(mfrow=c(1,2))
v <- voom(x, design, plot=TRUE)
v
```
```{r}
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit)
plotSA(efit, main="Final model: Mean-variance trend")
```
```{r}
summary(decideTests(efit))
```
```{r}
tfit <- treat(vfit, lfc=1)
dt <- decideTests(tfit)
summary(dt)
```
```{r}
de.common <- which(dt[,1]!=0)
length(de.common)
```
```{r}
head(tfit$genes$SYMBOL[de.common], n=20)
```
```{r}
vennDiagram(dt[,1], circle.col=c("turquoise", "salmon"))
```
```{r}
write.fit(tfit, dt, file="results.txt")
```
```{r}
Male.vs.Female <- topTreat(tfit, coef=1, n=Inf)
head(Male.vs.Female)
```
```{r}
plotMD(tfit, column=1, status=dt[,1], main=colnames(tfit)[1], 
       xlim=c(-8,13))
```
```{r}
glMDPlot(tfit, coef=1, status=dt, main=colnames(tfit)[1],
         side.main="ENSEMBL", counts=lcpm, groups=group, launch=TRUE)
```
```{r}
library(gplots)
library(heatmap.plus)
Male.vs.Female.topgenes <- Male.vs.Female$ENSEMBL[1:50]
i <- which(v$genes$ENSEMBL %in% Male.vs.Female.topgenes)
mycol <- colorpanel(1000,"blue","white","red")
par(cex.main=0.8,mar=c(1,1,1,1))
heatmap.plus(lcpm[i,], col=bluered(20),cexRow=1,cexCol=0.2, margins = c(20,13), main="HeatMap")

```








